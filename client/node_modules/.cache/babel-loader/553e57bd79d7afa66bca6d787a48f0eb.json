{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nimport * as api from '../api'; // action creatores - functions that return actions\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: 'FETCH_ALL',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n\n  const action = {\n    type: 'FETCH_ALL',\n    payload: []\n  };\n  dispatch(action);\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"sources":["/Users/christopher/Desktop/Class Bootcamp/Bookish-1/client/src/actions/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","api","getPosts","dispatch","data","fetchPosts","type","payload","error","console","log","message","action","createPost","post","updatePost","id","likePost","deletePost"],"mappings":"AAEA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,IAA5C,QAAwD,0BAAxD;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAE9C,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACI,UAAJ,EAAvB;AAEAF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,OAAO,EAAEH;AAA9B,KAAD,CAAR;AACH,GAJD,CAIE,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;;AAID,QAAMC,MAAM,GAAG;AAACN,IAAAA,IAAI,EAAE,WAAP;AAAoBC,IAAAA,OAAO,EAAE;AAA7B,GAAf;AAEAJ,EAAAA,QAAQ,CAACS,MAAD,CAAR;AACH,CAfM;AAgBP,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU,MAAOX,QAAP,IAAoB;AACpD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACY,UAAJ,CAAeC,IAAf,CAAvB;AAEAX,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAET,MAAR;AAAgBU,MAAAA,OAAO,EAAEH;AAAzB,KAAD,CAAR;AACD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,CARI;AAUL,OAAO,MAAMI,UAAU,GAAG,CAACC,EAAD,EAAKF,IAAL,KAAc,MAAOX,QAAP,IAAoB;AAC1D,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACc,UAAJ,CAAeC,EAAf,EAAmBF,IAAnB,CAAvB;AAEAX,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAER,MAAR;AAAgBS,MAAAA,OAAO,EAAEH;AAAzB,KAAD,CAAR;AACD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,CARM;AAUP,OAAO,MAAMM,QAAQ,GAAID,EAAD,IAAQ,MAAOb,QAAP,IAAoB;AAClD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACgB,QAAJ,CAAaD,EAAb,CAAvB;AAEAb,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEN,IAAR;AAAcO,MAAAA,OAAO,EAAEH;AAAvB,KAAD,CAAR;AACD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,CARM;AAUP,OAAO,MAAMO,UAAU,GAAIF,EAAD,IAAQ,MAAOb,QAAP,IAAoB;AACpD,MAAI;AACF,UAAM,MAAMF,GAAG,CAACiB,UAAJ,CAAeF,EAAf,CAAZ;AAEAb,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEP,MAAR;AAAgBQ,MAAAA,OAAO,EAAES;AAAzB,KAAD,CAAR;AACD,GAJD,CAIE,OAAOR,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,CARM","sourcesContent":["\n   \nimport { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nimport * as api from '../api';\n\n// action creatores - functions that return actions\nexport const getPosts = () => async (dispatch) => {\n\n    try {\n        const { data } = await api.fetchPosts();\n\n        dispatch({ type: 'FETCH_ALL', payload: data});\n    } catch (error) {\n        console.log(error.message);\n    }\n\n\n\n    const action = {type: 'FETCH_ALL', payload: [] }\n\n    dispatch(action);\n}\nexport const createPost = (post) => async (dispatch) => {\n    try {\n      const { data } = await api.createPost(post);\n  \n      dispatch({ type: CREATE, payload: data });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  \n  export const updatePost = (id, post) => async (dispatch) => {\n    try {\n      const { data } = await api.updatePost(id, post);\n  \n      dispatch({ type: UPDATE, payload: data });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  \n  export const likePost = (id) => async (dispatch) => {\n    try {\n      const { data } = await api.likePost(id);\n  \n      dispatch({ type: LIKE, payload: data });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  \n  export const deletePost = (id) => async (dispatch) => {\n    try {\n      await await api.deletePost(id);\n  \n      dispatch({ type: DELETE, payload: id });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };"]},"metadata":{},"sourceType":"module"}