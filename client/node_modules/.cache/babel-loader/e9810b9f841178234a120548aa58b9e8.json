{"ast":null,"code":"import _toConsumableArray from\"/Users/christopher/Desktop/Class Bootcamp/Bookish-1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{FETCH_ALL,CREATE,UPDATE,DELETE,LIKE}from'../constants/actionTypes';var reducers=function reducers(){var posts=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case FETCH_ALL:return action.payload;case LIKE:return posts.map(function(post){return post._id===action.payload._id?action.payload:post;});case CREATE:return[].concat(_toConsumableArray(posts),[action.payload]);case UPDATE:return posts.map(function(post){return post._id===action.payload._id?action.payload:post;});case DELETE:return posts.filter(function(post){return post._id!==action.payload;});default:return posts;}};export default reducers;","map":{"version":3,"sources":["/Users/christopher/Desktop/Class Bootcamp/Bookish-1/client/src/reducers/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","reducers","posts","action","type","payload","map","post","_id","filter"],"mappings":"yLAAA,OAASA,SAAT,CAAoBC,MAApB,CAA4BC,MAA5B,CAAoCC,MAApC,CAA4CC,IAA5C,KAAwD,0BAAxD,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAwB,IAAvBC,CAAAA,KAAuB,2DAAf,EAAe,IAAXC,CAAAA,MAAW,2CACvC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKR,CAAAA,SAAL,CACE,MAAOO,CAAAA,MAAM,CAACE,OAAd,CACF,IAAKL,CAAAA,IAAL,CACE,MAAOE,CAAAA,KAAK,CAACI,GAAN,CAAU,SAACC,IAAD,QAAWA,CAAAA,IAAI,CAACC,GAAL,GAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,CAAkCL,MAAM,CAACE,OAAzC,CAAmDE,IAA9D,EAAV,CAAP,CACF,IAAKV,CAAAA,MAAL,CACE,mCAAWK,KAAX,GAAkBC,MAAM,CAACE,OAAzB,GACF,IAAKP,CAAAA,MAAL,CACE,MAAOI,CAAAA,KAAK,CAACI,GAAN,CAAU,SAACC,IAAD,QAAWA,CAAAA,IAAI,CAACC,GAAL,GAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,CAAkCL,MAAM,CAACE,OAAzC,CAAmDE,IAA9D,EAAV,CAAP,CACF,IAAKR,CAAAA,MAAL,CACE,MAAOG,CAAAA,KAAK,CAACO,MAAN,CAAa,SAACF,IAAD,QAAUA,CAAAA,IAAI,CAACC,GAAL,GAAaL,MAAM,CAACE,OAA9B,EAAb,CAAP,CACE,QACI,MAAOH,CAAAA,KAAP,CAZV,CAcD,CAfD,CAgBA,cAAeD,CAAAA,QAAf","sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nconst reducers = (posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    case LIKE:\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case CREATE:\n      return [...posts, action.payload];\n    case UPDATE:\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload);\n        default:\n            return posts;\n    }\n};\nexport default reducers"]},"metadata":{},"sourceType":"module"}