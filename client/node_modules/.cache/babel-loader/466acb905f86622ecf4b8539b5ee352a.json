{"ast":null,"code":"import * as api from '../api';\nimport Post from '../components/Posts/Post/Post'; // action creatores - functions that return actions\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: 'FETCH_ALL',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  } // const action = {type: 'FETCH_ALL', payload: [] }\n  // dispatch(action);\n\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: 'CREATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/christopher/Desktop/Class Bootcamp/Bookish-1/client/src/actions/posts.js"],"names":["api","Post","getPosts","dispatch","data","fetchPosts","type","payload","error","console","log","message","createPost","post"],"mappings":"AACA,OAAO,KAAKA,GAAZ,MAAqB,QAArB;AACA,OAAOC,IAAP,MAAiB,+BAAjB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAE9C,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,GAAG,CAACK,UAAJ,EAAvB;AAEAF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,OAAO,EAAEH;AAA9B,KAAD,CAAR;AACH,GAJD,CAIE,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH,GAR6C,CAY9C;AAEA;;AACH,CAfM;AAgBP,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU,MAAMV,QAAN,IAAmB;AACnD,MAAI;AACJ,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,GAAG,CAACY,UAAJ,CAAeC,IAAf,CAAvB;AAEAV,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,QAAP;AAAiBC,MAAAA,OAAO,EAAEH;AAA1B,KAAD,CAAR;AACC,GAJD,CAIE,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEH;AACJ,CATM","sourcesContent":["\nimport * as api from '../api';\nimport Post from '../components/Posts/Post/Post';\n\n// action creatores - functions that return actions\nexport const getPosts = () => async (dispatch) => {\n\n    try {\n        const { data } = await api.fetchPosts();\n\n        dispatch({ type: 'FETCH_ALL', payload: data});\n    } catch (error) {\n        console.log(error.message);\n    }\n\n\n\n    // const action = {type: 'FETCH_ALL', payload: [] }\n\n    // dispatch(action);\n}\nexport const createPost = (post) => async(dispatch) => {\n    try {\n    const { data } = await api.createPost(post); \n\n    dispatch({type: 'CREATE', payload: data });      \n    } catch (error) {\n        console.log(error);\n        \n    }\n}"]},"metadata":{},"sourceType":"module"}